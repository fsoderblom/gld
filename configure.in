dnl Process this file with autoconf to produce a configure script.
AC_INIT(cnf.c)

AC_ARG_WITH(mysql,
    [ --with-mysql=DIR     	Set root of MySQL distribution.
		Should contain include/mysql/mysql.h and
		lib/mysql/libmysqlclient.so [default=/usr].
		Cannot be used at the same time as --with-pgsql.
		--with-mysql is the default.],
    [MYSQL_SET=1; MYSQL_PREFIX=$with_mysql],
    [MYSQL_SET=0; MYSQL_PREFIX="/usr"])

AC_ARG_WITH(pgsql,
    [ --with-pgsql=DIR     	Set root of PostgreSQL distribution.
		Should contain include/postgresql/libpq-fe.h and
		lib/libpq.so [default=/usr/local].
		Cannot be used at the same time as --with-mysql.],
    [PGSQL_SET=1; PGSQL_PREFIX=$with_pgsql],
    [PGSQL_SET=0; PGSQL_PREFIX="/usr/local"])

AC_SUBST(MYSQL_PREFIX)
AC_SUBST(PGSQL_PREFIX)
AC_SUBST(MYSQL_SET)
AC_SUBST(PGSQL_SET)

if [[ "${PGSQL_PREFIX}" = "yes" ]]; then
	PGSQL_PREFIX=/usr/local
fi

if [[ "${MYSQL_PREFIX}" = "yes" ]]; then
	MYSQL_PREFIX=/usr
fi

if [[ ${MYSQL_SET} -eq 1 -a ${PGSQL_SET} -eq 1 ]]; then
	echo
	echo "Error: --with-pgsql and --with-mysql are mutually exclusive!"
	echo
	exit 1
fi

if [[ ${MYSQL_SET} -eq 1 ]]; then
	SQL_LIBS="-L /usr/lib -L /lib -L${MYSQL_PREFIX}/lib/mysql -lmysqlclient"
	SQL_CFLAGS="-I${MYSQL_PREFIX}/include -D_DB_MYSQL_"
fi

if [[ ${PGSQL_SET} -eq 1 ]]; then
	SQL_LIBS="-L${PGSQL_PREFIX}/lib -lpq"
	SQL_CFLAGS="-g -Wall -I${PGSQL_PREFIX}/include -I${PGSQL_PREFIX}/include/postgresql -D_DB_PGSQL_"
fi

if [[ ${MYSQL_SET} -eq 0 -a ${PGSQL_SET} -eq 0 ]]; then
	SQL_LIBS="-L /usr/lib -L /lib -L${MYSQL_PREFIX}/lib/mysql -lmysqlclient"
	SQL_CFLAGS="-I${MYSQL_PREFIX}/include -D_DB_MYSQL_"
fi

AC_SUBST(SQL_LIBS)
AC_SUBST(SQL_CFLAGS)

dnl Checks for programs.
AC_PROG_CC

dnl Checks for header files.
AC_CHECK_HEADERS(sys/time.h syslog.h netdb.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_HEADER_TIME

dnl Checks for library functions.
AC_CHECK_FUNCS(select,,AC_MSG_ERROR(select not found.))
AC_CHECK_FUNC(socket, [], [
	AC_CHECK_LIB(socket, socket, [
		LIBS="$LIBS -lsocket"
	])
])
AC_CHECK_FUNC(inet_addr, [], [
	AC_CHECK_LIB(nsl, inet_addr, [
		LIBS="$LIBS -lnsl"
	])
])
AC_CHECK_FUNCS(strstr,,AC_MSG_ERROR(strstr not found.))
#AC_CHECK_FUNCS(daemon,,AC_MSG_ERROR(daemon not found.))
AC_CHECK_FUNCS(fork,,AC_MSG_ERROR(fork not found.))
AC_CHECK_FUNCS(accept,,AC_MSG_ERROR(accept not found.))
AC_CHECK_FUNCS(wait,,AC_MSG_ERROR(wait not found.))
AC_CHECK_FUNCS(shutdown,,AC_MSG_ERROR(shutdown not found.))
AC_CHECK_FUNCS(gethostbyname,,AC_MSG_ERROR(gethostbyname not found.))
AC_CHECK_FUNCS(bzero,,AC_MSG_ERROR(bzero not found.))
AC_CHECK_FUNCS(bcopy,,AC_MSG_ERROR(bcopy not found.))
AC_CHECK_FUNCS(connect,,AC_MSG_ERROR(connect not found.))
AC_CHECK_FUNCS(bind,,AC_MSG_ERROR(bind not found.))
AC_CHECK_FUNCS(sendto,,AC_MSG_ERROR(sendto not found.))
AC_CHECK_FUNCS(gethostbyaddr,,AC_MSG_ERROR(gethostbyaddr not found.))
AC_CHECK_FUNCS(getpeername,,AC_MSG_ERROR(getpeername not found.))
AC_CHECK_FUNCS(setsockopt,,AC_MSG_ERROR(setsockopt not found.))
AC_CHECK_FUNCS(waitpid,,AC_MSG_ERROR(waitpid not found.))
AC_CHECK_FUNCS(sscanf,,AC_MSG_ERROR(sscanf not found.))
AC_CHECK_FUNC(inet_aton, [], [
	AC_CHECK_LIB(resolv, inet_aton, [
		LIBS="$LIBS -lresolv"
	])
])

AC_SUBST(LIBS)

AC_OUTPUT(Makefile)
